version: '3.8'

services:

  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo
    networks:
      - grafana-network

  tempo:
    image: *tempoImage
    container_name: tempo
    command: [ "-config.file=/etc/tempo-config.yaml" ]
    volumes:
      - ./tempo-config.yaml:/etc/tempo-config.yaml
      - ./tempo-data:/var/tempo
    depends_on:
      - init
    networks:
      - grafana-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-config.yaml:/etc/prometheus-config.yaml
    command:
      - --config.file=/etc/prometheus-config.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    networks:
      - grafana-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587    # SMTP server address and port
      - GF_SMTP_USER=jovitacutinha01@gmail.com  # SMTP user (sender email address)
      - GF_SMTP_PASSWORD=exhv hpaw hvzu uvwk    # SMTP password
      - GF_SMTP_FROM_ADDRESS=jovita01@gmail.com   # Email sender address
      - GF_SMTP_FROM_NAME=Alert-System     # Name displayed on alert emails
      - GF_SMTP_SKIP_VERIFY=false               # Skip certificate verification (useful for local testing)
      - GF_SMTP_TLS=true                        # Enable TLS encryption for SMTP
    depends_on:
      - loki
      - prometheus
      - tempo
    networks:
      - grafana-network

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: --config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
    networks:
      - grafana-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.117.0
    container_name: otel-collector
    command:
      - "--config=/etc/otel-config.yaml"
    volumes:
      - ./otel-config.yaml:/etc/otel-config.yaml
    networks:
      - grafana-network
    depends_on:
      - prometheus
      - loki
      - tempo

  server3:
    build:
      context: ./server3
      dockerfile: Dockerfile
    container_name: server3
    ports:
      - "8083:8083"
    networks:
      - grafana-network

  server2:
    build:
      context: ./server2
      dockerfile: Dockerfile
    container_name: server2
    ports:
      - "8082:8082"
    environment:
      - SERVER3_URL=http://server3:8083
    depends_on:
      - server3
    networks:
      - grafana-network

  server1:
    build:
      context: ./server1
      dockerfile: Dockerfile
    container_name: server1
    ports:
      - "8084:8084"
    environment:
      - SERVER2_URL=http://server2:8082
    depends_on:
      - server2
    networks:
      - grafana-network

networks:
  grafana-network:
    driver: bridge
